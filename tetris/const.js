var data = [{
    blocks:[
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
        [0000000000],
    ],
    minos: 'tt'
}];
var COLORS = ["cyan", "yellow", "green", "red", "blue", "orange", "magenta"];
var MINOS_CVT = {
    i:0,
    o:1,
    s:2,
    z:3,
    j:4,
    l:5,
    t:6
}
var MINOS = [
  [
    [0, 0, 0, 0],
    [1, 1, 1, 1],
    [0, 0, 0, 0], // I テトリミノ
    [0, 0, 0, 0],
  ],
  [
    [0, 1, 1, 0],
    [0, 1, 1, 0],// O テトリミノ
    [0, 0, 0, 0],
    [0, 0, 0, 0],
  ],
  [
    [0, 1, 1, 0],
    [1, 1, 0, 0],// S テトリミノ
    [0, 0, 0, 0],
    [0, 0, 0, 0],
  ],
  [
    [1, 1, 0, 0],
    [0, 1, 1, 0],// Z テトリミノ
    [0, 0, 0, 0],
    [0, 0, 0, 0],
  ],
  [
    [1, 0, 0, 0],
    [1, 1, 1, 0],// J テトリミノ
    [0, 0, 0, 0],
    [0, 0, 0, 0],
  ],
  [
    [0, 0, 1, 0],
    [1, 1, 1, 0],// L テトリミノ
    [0, 0, 0, 0],
    [0, 0, 0, 0],
  ],
  [
    [0, 1, 0, 0],
    [1, 1, 1, 0],// T テトリミノ
    [0, 0, 0, 0],
    [0, 0, 0, 0],
  ]
];
$('#main').css({
    width: $('body').width(),
    height: $('body').height()
});
var FIELD_W = $('#main').width();
var FIELD_H = $('#main').height();

var FIELD_W = 300;
var FIELD_H = 600;

var COLS = 10;
var ROWS = 20;
var BLOCK_W = Math.ceil(FIELD_W / COLS);
var BLOCK_H = Math.ceil(FIELD_H / ROWS);
// BLOCK_H = BLOCK_W = BLOCK_W<BLOCK_H?BLOCK_W:BLOCK_H;

function RotRuleGen(){
  // [回転方向(0=右, 1=左)][回転前のミノの向き(0=出現時, 1=右, 2=逆, 3=左)][ルール ID ]
  this.dx = [[[0, -1, -1,  0, -1],    // i → r
              [0,  1,  1,  0,  1],    // r → v
              [0,  1,  1,  0,  1],    // v → l
              [0, -1, -1,  0, -1]],   // l → i
             [[0,  1,  1,  0,  1],    // i → l
              [0,  1,  1,  0,  1],    // r → i
              [0, -1, -1,  0, -1],    // v → r
              [0, -1, -1,  0, -1]]];  // l → v
  this.dy = [[[0,  0, -1,  2,  2],    // i → r
              [0,  0,  1, -2, -2],    // r → v
              [0,  0, -1,  2,  2],    // v → l
              [0,  0,  1, -2, -2]],   // l → i
             [[0,  0, -1,  2,  2],    // i → l
              [0,  0,  1, -2, -2],    // r → i
              [0,  0, -1,  2,  2],    // v → r
              [0,  0,  1, -2, -2]]];  // l → v
  return this;
}
/*----------------------------------------------------------------------------------------
 ☆★ オブジェクト: I ミノの回転ルール (ROTation RULE - I) ★☆
----------------------------------------------------------------------------------------*/
function RotRuleI(){
  // [回転方向(0=右, 1=左)][回転前のミノの向き(0=出現時, 1=右, 2=逆, 3=左)][ルール ID ]
  this.dx = [[[0, -2,  1, -2,  1],    // i → r
              [0, -1,  2, -1,  2],    // r → v
              [0,  2, -1,  2, -1],    // v → l
              [0,  1, -2,  1, -2]],   // l → i
             [[0, -1,  2, -1,  2],    // i → l
              [0,  2, -1,  2, -1],    // r → i
              [0,  1, -2,  1, -2],    // v → r
              [0, -2,  1, -2,  1]]];  // l → v
  this.dy = [[[0,  0,  0,  1, -2],    // i → r
              [0,  0,  0, -2,  1],    // r → v
              [0,  0,  0, -1,  2],    // v → l
              [0,  0,  0,  2, -1]],   // l → i
             [[0,  0,  0, -2,  1],    // i → l
              [0,  0,  0, -1,  2],    // r → i
              [0,  0,  0,  2, -1],    // v → r
              [0,  0,  0,  1, -2]]];  // l → v
  return this;
}
/*----------------------------------------------------------------------------------------
 ☆★ 各回転ルールへのアクセス設定 ★☆
----------------------------------------------------------------------------------------*/
var gRotationRuleGeneral = new RotRuleGen();
var gRotationRuleI = new RotRuleI();
